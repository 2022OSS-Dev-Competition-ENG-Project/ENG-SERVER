<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.managerservice.mapper.FacilityContentMapper">

    <resultMap type="com.example.managerservice.dto.FacilityContentDto" id="facilityContentInfo">
        <result property="content_num" column="contentNum"/>
        <result property="content_title" column="contentTitle"/>
        <result property="content_text" column="contentText"/>
        <result property="content_date" column="contentDate"/>
        <result property="content_img" column="contentImg"/>
        <result property="content_look" column="contentLook"/>
        <result property="content_type" column="contentType"/>
        <result property="facility_no" column="facilityNo"/>
        <result property="user_uuid" column="userUuid"/>
    </resultMap>

    <resultMap type="com.example.managerservice.dto.FacilityContentLikeDto" id="contentLikeInfo">
        <result property="user_uuid" column="userUuid"/>
        <result property="content_num" column="contentNum"/>
    </resultMap>

    <resultMap type="com.example.managerservice.vo.getUserContentVo" id="getUserContent">
        <result property="content_num" column="contentNum"/>
        <result property="content_title" column="contentTitle"/>
        <result property="content_text" column="contentText"/>
        <result property="content_img" column="contentImg"/>
        <result property="content_date" column="contentDate"/>
        <result property="content_look" column="contentLook"/>
        <result property="user_uuid" column="writerUuid"/>
        <result property="writer_nickname" column="writerNickname"/>
        <result property="writer_image" column="writerImage"/>
        <result property="user_like_bool" column="userLikeBool"/>
    </resultMap>

    <resultMap type="com.example.managerservice.vo.ContentListVo" id="contentList">
        <result property="content_num" column="contentNum"/>
        <result property="content_title" column="contentTitle"/>
        <result property="content_text" column="contentText"/>
        <result property="content_img" column="contentImg"/>
        <result property="content_date" column="contentDate"/>
        <result property="name" column="name"/>
    </resultMap>

    <resultMap type="com.example.managerservice.vo.GetMyContentVo" id="getMyContentVo">
        <result property="content_num" column="contentNum"/>
        <result property="content_title" column="contentTitle"/>
        <result property="content_text" column="contentText"/>
        <result property="content_img" column="contentImg"/>
        <result property="content_date" column="contentDate"/>
    </resultMap>

    <resultMap type="com.example.managerservice.vo.MainContentListVo" id="mainContentList">
        <result property="content_num" column="contentNo"/>
        <result property="content_title" column="contentTitle"/>
        <result property="content_text" column="ContentText"/>
        <result property="content_img" column="contentImg"/>
    </resultMap>

    <!-- 게시물 등록 -->
    <insert id="registerContent" useGeneratedKeys="true" keyProperty="contentNum" keyColumn="content_num">
        INSERT INTO facility_content (content_num,
                                      content_title,
                                      content_text,
                                      content_img,
                                      content_date,
                                      content_look,
                                      content_type,
                                      facility_no,
                                      user_uuid)
        values (#{contentNum},
                #{contentTitle},
                #{contentText},
                #{contentImg},
                #{contentDate},
                #{contentLook},
                #{contentType},
                #{facilityNo},
                #{userUuid})
    </insert>

    <!--게시물 등록 - 게시물 중복 검사-->
    <select id="validFacilityContentNum" resultType="java.lang.Integer">
        select if(count(*) = 1, 1, 0)
        from facility_content
        where content_num = #{contentNum}
    </select>

    <!--게시물 등록 - 게시물 번호 가져오기 -->
    <select id="getContentNum" resultType="java.lang.Integer">
        select content_num
        from facility_content
        where content_text = #{contentText}
          AND content_date = #{contentDate};
    </select>

    <!-- 게시물 등록 - 이미지 업로드 -->
    <update id="contentImageUpdate">
        UPDATE facility_content
        SET content_img = #{contentImg}
        WHERE content_num = #{contentNum}
    </update>

    <!-- 게시물 삭제 -->
    <delete id="deleteContent" parameterType="com.example.managerservice.dto.FacilityContentDto">
        DELETE
        FROM facility_content
        WHERE content_num = #{contentNum}
          AND user_uuid = #{userUuid}
    </delete>

    <!-- 게시물 삭제 - 매니저용 -->
    <delete id="deleteContentManager">
        DELETE
        FROM facility_content
        WHERE content_num = #{contentNum}
          AND facility_no = #{facilityNo};
    </delete>

    <!-- 게시물 삭제 - 게시물에 달려 있는 모든 댓글 삭제 하기 -->
    <delete id="deleteAllComment">
        DELETE
        FROM facility_content_comment
        WHERE content_num = #{contentNum}
    </delete>

    <!-- 게시물 삭제 - contentNum 과 일치하는 모든 Like 정보를 삭제한다. -->
    <delete id="deleteAllLike">
        DELETE
        FROM user_like_content
        WHERE content_num = #{contentNum}
    </delete>

    <!--게시물 삭제 - 게시물 주인인지 확인 -->
    <select id="validContentOwner" resultType="java.lang.Integer">
        select if(count(*) = 0, 0, 1)
        from facility_content
        where user_uuid = #{userUuid}
          AND content_num = #{contentNum};
    </select>

    <!-- 특정 게시물 상세 보기 -->
    <select id="contentDetailView" resultMap="getUserContent">
        SELECT u.${nameColum}                 as writer_nickname,
               u.${imgColum}                  as writer_image,
               fc.content_num,
               fc.content_title,
               fc.content_text,
               fc.content_img,
               fc.content_date,
               fc.content_look,
               fc.user_uuid                   as writer_uuid,
               if(ul.user_uuid is null, 0, 1) as user_like_bool
        FROM (SELECT *
              FROM facility_content
              WHERE content_num = #{contentNum}) AS fc
                 /* 작성자 닉네임 구하기 위함*/
                 INNER JOIN ${nameTable} u ON fc.user_uuid = u.${uuidColum}
            /* 조회자가 게시글 좋아요 여부 확인하기 위함*/
                 LEFT OUTER JOIN user_like_content ul ON #{userUuid} = ul.user_uuid AND fc.content_num = ul.content_num;
    </select>

    <select id="getContentType" resultType="java.lang.Integer">
        SELECT content_type
        FROM facility_content
        WHERE content_num = #{contentNum};
    </select>


    <!-- 게시물 좋아요 -->
    <insert id="facilityContentLike" parameterType="com.example.managerservice.dto.FacilityContentLikeDto">
        INSERT INTO user_like_content (user_uuid,
                                       content_num)
        values (#{userUuid},
                #{contentNum})
    </insert>

    <!-- 게시물 좋아요 - 좋아요 개수 불러오기 -->
    <select id="getLikeCount" resultType="java.lang.Integer">
        select count(*)
        from user_like_content
        where content_num = #{contentNum}
    </select>

    <!-- 게시물 좋아요 - 좋아요 여부 불러오기 -->
    <select id="contentLikeBool" resultType="java.lang.Integer">
        select if(count(*) >= 1, 1, 0)
        from user_like_content
        where content_num = #{contentNum}
          AND user_uuid = #{userUuid}
    </select>

    <!-- 게시물 좋아요 - 좋아요 취소하기 -->
    <delete id="deleteContentLike" parameterType="com.example.managerservice.dto.FacilityContentLikeDto">
        delete
        from user_like_content
        where content_num = #{contentNum}
          AND user_uuid = #{userUuid}
    </delete>

    <!-- 메인 페이지에 보일 게시물 -->
    <select id="getContentListMain" resultMap="mainContentList">
        <![CDATA[
        SELECT content_num, content_title, content_text, content_img
        FROM facility_content
        WHERE content_type = #{type}
          AND facility_no = #{facilityNo}
        ORDER BY content_num DESC LIMIT ${count}
        ;
        ]]>
    </select>

    <!--게시물 리스트 불러오기 -->
    <select id="getContentList" resultMap="contentList">
        select us.${subValue} as name,
               fc.content_num,
               fc.content_title,
               fc.content_text,
               fc.content_date
        From (SELECT *
              FROM facility_content
              WHERE facility_no = #{facilityNum}
                AND content_type = #{type}) AS fc
                 INNER JOIN ${subTable} us ON fc.user_uuid = us.${subType}
        ORDER BY content_num DESC
    </select>

    <!-- 게시물 개수 불러오기 -->
    <select id="getContentCount" resultType="java.lang.Integer">
        select COUNT(*)
        from facility_content
        where facility_no = #{facilityNo}
          AND content_type = #{type}
    </select>

    <!-- 내가 쓴 게시물 불러오기 5개만 -->
    <select id="getMyContentLt" resultMap="getMyContentVo">
        SELECT content_num,
               content_title,
               content_text,
               content_img,
               content_date
        FROM facility_content
        where user_uuid = #{userUuid}
        ORDER BY content_num DESC LIMIT 5
    </select>
    <!-- 내가 쓴 게시물 불러오기 -->
    <select id="getMyContent" resultMap="getMyContentVo">
        SELECT content_num,
               content_title,
               content_text,
               content_date
        FROM facility_content
        where user_uuid = #{userUuid}
        ORDER BY content_num DESC
    </select>

</mapper>